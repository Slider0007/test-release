; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = main
default_envs = esp32cam

[common:idf]
build_flags = 
    -D USE_ESP_IDF
lib_deps =

[common:esp32-idf]
extends = common:idf
platform = platformio/espressif32 @ 6.3.2
framework = espidf
lib_deps = 
    ${common:idf.lib_deps}
build_flags = 
    ${common:idf.build_flags}
    -D USE_ESP32
    -D USE_ESP32_FRAMEWORK_ESP_IDF

[flags:runtime]
build_flags = 
    -Wno-nonnull-compare
    -Wno-sign-compare
    -Wno-unused-but-set-variable
    -Wno-unused-variable
    -fno-exceptions

[flags:clangtidy]
build_flags = 
    -Wall
    -Wextra
    -Wunreachable-code
    -Wno-nonnull-compare
    ;-Wshadow-compatible-local
    -fno-exceptions



; #############################################################################
; Board
; ESP32CAM
; #############################################################################
[env:esp32cam]
extends = common:esp32-idf
board = esp32cam
framework = espidf
build_flags = 
    ; ### Common flags:
    ${common:esp32-idf.build_flags}
	${flags:runtime.build_flags}
    ; ### Hardware: Define board type + camera model
    ; ### (see 'include/defines.h' for definitions)
    -D ENV_BOARD_TYPE=1
    -D ENV_CAMERA_MODEL=1
    ; ### Software modules: Uncomment to disable
    ;-D ENV_DISABLE_MQTT
    ;-D ENV_DISABLE_INFLUXDB
    ;-D ENV_DISABLE_SOFTAP
board_build.partitions = partitions.csv
monitor_speed = 115200
monitor_rts = 0
monitor_dtr = 0
monitor_filters = default, esp32_exception_decoder


; +++++++++++++++++++++++++++++++++++++++++++
; Use this environment if building locally
; Include parameter tooltips to HTML parameter config file 
; and hash to HTML files (caching)
; +++++++++++++++++++++++++++++++++++++++++++
[env:esp32cam-localbuild]
extends = env:esp32cam
extra_scripts = post:scripts/localbuild.py # Add parameter tooltips to HTML page 
                                           # and hashes to all cached HTML files


; +++++++++++++++++++++++++++++++++++++++++++
; Use this environment for task analysis (PR #1751)
; +++++++++++++++++++++++++++++++++++++++++++
[env:esp32cam-task-analysis]
extends = env:esp32cam
; sdkconfig.esp32cam-task-analysis.defaults override some sdkconfig.defaults 
; and enable debug analysis options
build_flags = 
    -D TASK_ANALYSIS_ON
    ;-D DEBUG_DETAIL_ON
    ;please use only one HEAP tracing at time.
    ;-D HEAP_TRACING_MAIN_WIFI
    ;-D HEAP_TRACING_MAIN_START
	;-D HEAP_TRACING_CLASS_FLOW_CNN_GENERAL_DO_ALING_AND_CUT


; +++++++++++++++++++++++++++++++++++++++++++
; Use this environment for detailed and deep debugging
; (default debugging is already possible with default environment)
; +++++++++++++++++++++++++++++++++++++++++++
[env:esp32cam-debug]
extends = env:esp32cam
; sdkconfig.esp32cam-debug.defaults override some sdkconfig.defaults
; and enable debug options and clangtidy
build_flags = 
    ; ### clangtidy build flags: 
	${flags:clangtidy.build_flags}
    ; ### Debug options :
    -D DEBUG_DETAIL_ON
    ;-D DEBUG_DISABLE_BROWNOUT_DETECTOR
    ;-D DEBUG_ENABLE_PERFMON
    ;-D DEBUG_HIMEM_MEMORY_CHECK
lib_ldf_mode = deep+


; +++++++++++++++++++++++++++++++++++++++++++
; Enable HIMEM support (8 MB SPIRAM boards)
; !!! RAM usage in HIMEM is not supported by firmware up to now !!!
; https://github.com/espressif/esp-idf/blob/master/examples/system/himem/README.md
; +++++++++++++++++++++++++++++++++++++++++++
[env:esp32cam-himem]
extends = env:esp32cam
; sdkconfig.esp32cam-dev-himem.defaults override some sdkconfig.defaults
build_flags = 
    ;-D DEBUG_HIMEM_MEMORY_CHECK
