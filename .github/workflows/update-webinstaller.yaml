name: Update Web Installer

on:
  workflow_dispatch:


jobs:
  update-webinstaller:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1  # The maximum number of jobs that can run simultaneously
      fail-fast: false
      matrix:
        plat:
         - esp32cam
         - esp32cam-debug

    # Sets permissions of the GITHUB_TOKEN to allow downloading artifacts
    permissions:
      actions: read
      contents: write

    steps:
    - name: Checkout gh-pages branch
      uses: actions/checkout@v4
      with:
        ref: gh-pages

    - name: Pull artifacts
      id: pull_artifacts
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        regex: true
        file: "AI-on-the-edge-device__manual-setup__${{ matrix.plat }}.*.zip"
        target: './artifacts/'

    - name: Prepare data
      run: |
        echo "Updating files"

        rm -rf "./firmware/${{ matrix.plat }}/"
        mkdir -p "./firmware/${{ matrix.plat }}/"

        unzip ./artifacts/AI-on-the-edge-device__manual-setup__${{ matrix.plat }}__*.zip -d "./artifacts/"

        cp -f "./artifacts/firmware.bin" "./firmware/${{ matrix.plat }}/bootloader.bin"
        cp -f "./artifacts/partitions.bin" "./firmware/${{ matrix.plat }}/partitions.bin"
        cp -f "./artifacts/firmware.bin" "./firmware/${{ matrix.plat }}/firmware.bin"

        echo "Update version string"
        sed -i -E 's/<b>Firmware Version: .*./<b>Firmware Version: ${{ steps.pull_artifacts.outputs.version }}</b>/g' index.html
        sed -i -E 's/"version":.*.,/"version": "${{ steps.pull_artifacts.outputs.version }}",/g' manifest_${{ matrix.plat }}.json

    - name: Commit data
      shell: pwsh
      run: |
        & git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        & git config --local user.name "github-actions[bot]"
        & git add .
        & git diff HEAD --exit-code | Out-Null
        if ($LASTEXITCODE -ne 0)
        {
          & git commit -m "${{ matrix.plat }}: Update firmware to ${{ steps.pull_artifacts.outputs.version }}"
          & git push --force
        }
